{
	"name": "client-release-group-root",
	"version": "2.70.0",
	"private": true,
	"homepage": "https://fluidframework.com",
	"repository": {
		"type": "git",
		"url": "https://github.com/microsoft/FluidFramework.git"
	},
	"license": "MIT",
	"author": "Microsoft and contributors",
	"scripts": {
		"build": "turbo run build",
		"build-and-test": "turbo run test:unit test:mocha test:jest",
		"build-and-test:cjs": "turbo run test:cjs",
		"build-and-test:cjs:legacy": "fluid-build --task test:cjs --worker",
		"build-and-test:esm": "turbo run test:esm",
		"build-and-test:esm:legacy": "fluid-build --task test:esm --worker",
		"build-and-test:jest": "turbo run test:jest",
		"build-and-test:jest:legacy": "fluid-build --task test:jest --worker",
		"build-and-test:legacy": "fluid-build --task test --worker",
		"build-and-test:mocha": "turbo run test:mocha",
		"build-and-test:mocha:cjs": "turbo run test:mocha:cjs",
		"build-and-test:mocha:cjs:legacy": "fluid-build --task test:mocha:cjs --worker",
		"build-and-test:mocha:esm": "turbo run test:mocha:esm",
		"build-and-test:mocha:esm:legacy": "fluid-build --task test:mocha:esm --worker",
		"build-and-test:mocha:legacy": "fluid-build --task test:mocha --worker",
		"build-and-test:nx": "nx run-many -t test:unit test:mocha test:jest",
		"build-and-test:unit": "turbo run test:unit",
		"build-and-test:unit:cjs": "turbo run test:unit:cjs",
		"build-and-test:unit:cjs:legacy": "fluid-build --task test:unit:cjs --worker",
		"build-and-test:unit:esm": "turbo run test:unit:esm",
		"build-and-test:unit:esm:legacy": "fluid-build --task test:unit:esm --worker",
		"build-and-test:unit:legacy": "fluid-build --task test:unit --worker",
		"build:api": "turbo run build:api",
		"build:api:legacy": "fluid-build --task build:api",
		"build:compile": "turbo run compile",
		"build:compile:legacy": "fluid-build --task compile",
		"build:compile:nx": "nx run-many -t compile",
		"build:docs": "turbo run build:docs",
		"build:docs:legacy": "fluid-build --task build:docs",
		"build:eslint": "turbo run eslint",
		"build:eslint:legacy": "fluid-build --task eslint",
		"build:fast": "turbo run build",
		"build:fast:legacy": "fluid-build --task build --worker",
		"build:full": "turbo run full",
		"build:full:compile": "turbo run compile webpack",
		"build:full:compile:legacy": "fluid-build --task compile --task webpack",
		"build:full:legacy": "fluid-build --task full",
		"build:gendocs": "concurrently npm:build:gendocs:client npm:build:gendocs:server && cd docs && npm run build",
		"build:gendocs:client": "turbo run build:gendocs:client",
		"build:gendocs:client:azure": "copyfiles \"azure/**/*.api.json\" ./_api-extractor-temp/doc-models/ -e \"**/node_modules/**\" -f -V",
		"build:gendocs:client:examples": "copyfiles \"examples/**/*.api.json\" ./_api-extractor-temp/doc-models/ -e \"**/node_modules/**\" -f -V",
		"build:gendocs:client:experimental": "copyfiles \"experimental/**/*.api.json\" ./_api-extractor-temp/doc-models/ -e \"**/node_modules/**\" -f -V",
		"build:gendocs:client:legacy": "fluid-build --task build:gendocs:client",
		"build:gendocs:client:packages": "copyfiles \"packages/**/*.api.json\" ./_api-extractor-temp/doc-models/ -e \"**/node_modules/**\" -f -V",
		"build:gendocs:server": "concurrently \"npm:build:gendocs:server:*\"",
		"build:gendocs:server:routerlicious": "copyfiles \"server/routerlicious/**/*.api.json\" ./_api-extractor-temp/doc-models/ -e \"**/node_modules/**\" -f -V",
		"build:legacy": "fluid-build --task build",
		"build:nx": "nx run-many -t check:format compile lint build:api-reports build:docs build:manifest build:readme",
		"build:readme": "markdown-magic --files \"**/*.md\" !docs",
		"bundle-analysis:collect": "npm run webpack:profile && flub generate bundleStats",
		"bundle-analysis:run": "flub run bundleStats --dangerfile build-tools/packages/build-cli/lib/library/dangerfile.cjs",
		"changeset": "flub changeset add --releaseGroup client",
		"check:are-the-types-wrong": "turbo run check:are-the-types-wrong",
		"check:are-the-types-wrong:legacy": "fluid-build --task check:are-the-types-wrong",
		"check:changesets": "vale .changeset --glob=*-*-*.md",
		"check:format:repo": "biome check .",
		"check:versions": "flub check buildVersion -g client --path .",
		"check:versions:fix": "flub check buildVersion -g client --path . --fix",
		"checks": "turbo run checks",
		"checks:fix": "turbo run checks:fix",
		"checks:fix:legacy": "fluid-build --task checks:fix",
		"checks:legacy": "fluid-build --task checks",
		"ci:build": "turbo run ci:build",
		"ci:build:docs": "turbo run ci:build:docs",
		"ci:build:docs:legacy": "fluid-build --task ci:build:docs",
		"ci:build:legacy": "fluid-build --task ci:build",
		"ci:build:nx": "nx run-many -t compile lint ci:build:api-reports ci:build:docs build:manifest build:readme",
		"ci:check:are-the-types-wrong": "pnpm run -r --parallel --no-bail --color check:are-the-types-wrong",
		"ci:test:jest": "npm run test:jest:report",
		"ci:test:jest:coverage": "c8 --no-clean npm run test:jest:report",
		"ci:test:mocha": "npm run test:mocha",
		"ci:test:mocha:coverage": "c8 --no-clean npm run test:mocha -- --timeout 4s",
		"ci:test:realsvc:local": "pnpm run -r --no-sort --stream --no-bail test:realsvc:local:report",
		"ci:test:realsvc:local:coverage": "c8 --no-clean pnpm recursive --no-sort --stream --no-bail run test:realsvc:local:report",
		"ci:test:realsvc:tinylicious": "pnpm run -r --no-sort --stream --no-bail test:realsvc:tinylicious:report",
		"ci:test:realsvc:tinylicious:coverage": "c8 --no-clean pnpm run -r --no-sort --stream --no-bail test:realsvc:tinylicious:report ",
		"ci:test:stress:tinylicious": "pnpm run -r --no-sort --stream --no-bail test:stress:tinylicious:report ",
		"ci:test:stress:tinylicious:coverage": "c8 --no-clean pnpm run -r --no-sort --stream --no-bail test:stress:tinylicious:report ",
		"clean": "turbo run clean",
		"clean:docs": "rimraf --glob \"**/_api-extractor-temp*\"",
		"clean:legacy": "fluid-build --task clean",
		"clean:nyc": "rimraf --glob \"nyc/**\"",
		"clean:r11s": "fluid-build -g server --task clean",
		"clean:root": "rimraf --glob \"*.done.build.log\"",
		"compile:nx": "nx run-many -t commonjs build:esnext api build:test build:copy",
		"eslint": "turbo run eslint",
		"eslint:fix": "turbo run eslint:fix",
		"eslint:fix:legacy": "fluid-build --task eslint:fix",
		"eslint:legacy": "fluid-build --task eslint",
		"format": "turbo run format",
		"format:biome": "turbo run format:biome",
		"format:biome:legacy": "fluid-build --task format:biome",
		"format:changed": "npm run format:changed:main",
		"format:changed:main": "biome check --write --changed --since=main",
		"format:changed:next": "biome check --write --changed --since=next",
		"format:legacy": "fluid-build --task format",
		"format:repo": "biome check . --write",
		"full:nx": "nx run-many -t check:format compile lint build:api-reports build:docs build:manifest build:readme webpack",
		"generate:packageList": "turbo run generate:packageList",
		"generate:packageList:internal-build": "flub list client --no-private --feed internal-build --outFile feeds/internal-build.txt",
		"generate:packageList:internal-dev": "flub list client --no-private --feed internal-dev --outFile feeds/internal-dev.txt",
		"generate:packageList:internal-test": "flub list client --no-private --feed internal-test --outFile feeds/internal-test.txt",
		"generate:packageList:legacy": "fluid-build --task generate:packageList",
		"generate:packageList:public": "flub list client --no-private --feed public --outFile feeds/public.txt",
		"generate:packagesMd": "flub check layers --info layerInfo.json --md .",
		"preinstall": "node scripts/only-pnpm.cjs",
		"layer-check": "flub check layers --info layerInfo.json",
		"lint": "turbo run lint",
		"lint:fix": "turbo run lint:fix",
		"lint:fix:legacy": "fluid-build --task lint:fix",
		"lint:legacy": "fluid-build --task lint",
		"lint:nx": "nx run-many -t lint",
		"policy-check": "flub check policy",
		"policy-check-help": "echo Detect (and error on) policy-check violations, like package.json sorting, copyright headers etc. Run the check or \"pnpm flub check policy --listHandlers\" for a full list.",
		"policy-check:asserts": "flub generate assertTags --all && npm run format",
		"policy-check:fix": "flub check policy --fix",
		"policy-check:fix-help": "echo Fix policy-check violations",
		"restart": "cd server/routerlicious && npm run restart",
		"start:docker": "docker-compose -f server/docker-compose.yml up",
		"stop:docker": "docker-compose -f server/docker-compose.yml down",
		"stop:docker:full": "docker-compose -f server/docker-compose.yml down && docker volume prune --force",
		"syncpack:deps": "syncpack lint-semver-ranges",
		"syncpack:deps:fix": "syncpack set-semver-ranges",
		"syncpack:versions": "syncpack list-mismatches",
		"syncpack:versions:fix": "syncpack fix-mismatches",
		"test": "npm run test:mocha && npm run test:jest && npm run test:realsvc && npm run test:stress",
		"test:bail": "npm run test:mocha:bail && npm run test:jest:bail",
		"test:benchmark:copyresults": "copyfiles --exclude \"**/node_modules/**\" \"**/benchmarkOutput/**\" benchmarkOutput",
		"test:benchmark:report": "pnpm run -r --no-sort --stream --no-bail test:benchmark:report --reporterOptions reportDir=./benchmarkOutput",
		"test:copyresults": "copyfiles --exclude \"**/node_modules/**\" \"**/nyc/**\" nyc",
		"test:coverage": "c8 npm test",
		"test:fromroot": "mocha \"packages/**/dist/test/**/*.spec.*js\" --exit",
		"test:jest": "assign-test-ports && pnpm puppeteer browsers install chrome-headless-shell && pnpm -r --no-sort --stream --no-bail test:jest --color",
		"test:jest:bail": "assign-test-ports && pnpm puppeteer browsers install chrome-headless-shell && pnpm -r --no-sort --stream test:jest",
		"test:jest:report": "assign-test-ports && pnpm puppeteer browsers install chrome-headless-shell && pnpm -r --no-sort --stream --no-bail --workspace-concurrency=4 test:jest",
		"test:memory-profiling:copyresults": "copyfiles --exclude \"**/node_modules/**\" \"**/memoryProfilingOutput/**\" memoryProfilingOutput",
		"test:memory-profiling:report": "pnpm run -r --no-sort --stream --no-bail test:memory-profiling:report -- --reporterOptions reportDir=./memoryProfilingOutput",
		"test:mocha": "pnpm run -r --no-sort --stream --no-bail test:mocha --color",
		"test:mocha:bail": "pnpm run -r --no-sort --stream test:mocha",
		"test:realsvc": "pnpm run -r --no-sort --stream --no-bail test:realsvc",
		"test:stress": "pnpm run -r --no-sort --stream --no-bail test:stress",
		"tsc": "turbo run tsc",
		"tsc:fast": "turbo run tsc",
		"tsc:fast:legacy": "fluid-build --task tsc --worker",
		"tsc:legacy": "fluid-build --task tsc",
		"tsc:nx": "nx run-many -t tsc",
		"typetests:gen": "turbo run typetests:gen",
		"typetests:gen:legacy": "fluid-build --task typetests:gen",
		"typetests:prepare": "flub typetests -g client --reset --previous --normalize",
		"watch": "concurrently \"npm run watch:tsc\" \"npm run watch:esnext\" \"npm run watch:webpack\"",
		"watch:esnext": "pnpm run -r --parallel build:esnext --watch",
		"watch:tsc": "pnpm run -r --parallel tsc --watch",
		"watch:webpack": "pnpm run -r --parallel webpack --watch",
		"webpack": "turbo run webpack",
		"webpack:legacy": "fluid-build --task webpack",
		"webpack:profile": "turbo run webpack:profile",
		"webpack:profile:legacy": "fluid-build --task webpack:profile"
	},
	"c8": {
		"all": true,
		"cache-dir": "nyc/.cache",
		"exclude": [
			"**/*.d.*ts",
			"**/src/test/**/*.*ts",
			"**/dist/test/**/*.*js",
			"**/lib/test/**/*.*js",
			"experimental/examples/**",
			"experimental/PropertyDDS/examples/**",
			"**/*.bundle.js",
			"packages/tools/devtools/devtools-browser-extension/dist/e2e-tests/**",
			"packages/tools/devtools/devtools-browser-extension/dist/bundle/**"
		],
		"exclude-after-remap": false,
		"extension": [
			".ts",
			".tsx",
			".js",
			".jsx"
		],
		"include": [
			"packages/**/src/**/*.*ts",
			"packages/**/dist/**/*.*js",
			"packages/**/lib/**/*.*js",
			"experimental/**/src/**/*.*ts",
			"experimental/**/dist/**/*.*js"
		],
		"merge-async": true,
		"report-dir": "nyc/report",
		"reporter": [
			"clover",
			"cobertura",
			"html",
			"json-summary",
			"text"
		],
		"temp-directory": "nyc/.nyc_output"
	},
	"devDependencies": {
		"@biomejs/biome": "~1.9.3",
		"@changesets/cli": "^2.27.8",
		"@fluid-private/changelog-generator-wrapper": "workspace:~",
		"@fluid-tools/build-cli": "^0.58.3",
		"@fluid-tools/markdown-magic": "workspace:~",
		"@fluidframework/build-common": "^2.0.3",
		"@fluidframework/build-tools": "^0.58.3",
		"@fluidframework/eslint-config-fluid": "^6.0.0",
		"@fluidframework/test-tools": "^1.0.195075",
		"@microsoft/api-extractor": "7.52.11",
		"@nx/workspace": "^21.6.5",
		"@vvago/vale": "^3.11.2",
		"auto-changelog": "^2.4.0",
		"c8": "^10.1.3",
		"changesets-format-with-issue-links": "^0.3.0",
		"commander": "^12.1.0",
		"concurrently": "^8.2.1",
		"copyfiles": "^2.4.1",
		"danger": "^13.0.4",
		"eslint": "~8.55.0",
		"glob": "^11.0.0",
		"jest": "^29.6.2",
		"mocha": "^10.8.2",
		"nx": "21.6.5",
		"puppeteer": "^23.6.0",
		"rimraf": "^4.4.0",
		"run-script-os": "^1.1.6",
		"syncpack": "^13.0.2",
		"ts2esm": "^1.4.0",
		"tsx": "^4.20.6",
		"turbo": "^2.3.3",
		"typescript": "~5.4.5"
	},
	"packageManager": "pnpm@10.17.1+sha512.17c560fca4867ae9473a3899ad84a88334914f379be46d455cbf92e5cf4b39d34985d452d2583baf19967fa76cb5c17bc9e245529d0b98745721aa7200ecaf7a",
	"engines": {
		"node": ">=20.15.1",
		"pnpm": "10"
	},
	"fluidBuild": {
		"tasks": {
			"build": {
				"dependsOn": [
					"^build",
					"build:docs",
					"build:gendocs:client",
					"generate:packagesMd",
					"checks"
				],
				"script": false
			},
			"build:api": {
				"dependsOn": [
					"^build:docs",
					"build:gendocs:client"
				],
				"script": false
			},
			"build:docs": {
				"dependsOn": [
					"^build:docs",
					"build:gendocs:client",
					"build:readme"
				],
				"script": false
			},
			"build:gendocs:client": {
				"dependsOn": [
					"build:gendocs:client:azure",
					"build:gendocs:client:examples",
					"build:gendocs:client:experimental",
					"build:gendocs:client:packages"
				],
				"script": false
			},
			"build:gendocs:client:azure": {
				"after": [
					"^build:docs",
					"^ci:build:docs"
				]
			},
			"build:gendocs:client:examples": {
				"after": [
					"^build:docs",
					"^ci:build:docs"
				]
			},
			"build:gendocs:client:experimental": {
				"after": [
					"^build:docs",
					"^ci:build:docs"
				]
			},
			"build:gendocs:client:packages": {
				"after": [
					"^build:docs",
					"^ci:build:docs"
				]
			},
			"build:readme": {
				"dependsOn": []
			},
			"check:format": {
				"dependsOn": [
					"check:format:repo"
				],
				"script": false
			},
			"checks": {
				"dependsOn": [
					"check:format",
					"generate:packageList",
					"policy-check",
					"layer-check",
					"syncpack:deps",
					"syncpack:versions",
					"check:versions"
				],
				"script": false
			},
			"checks:fix": {
				"dependsOn": [
					"format",
					"generate:packageList",
					"policy-check:fix",
					"syncpack:deps:fix",
					"syncpack:versions:fix",
					"check:versions:fix"
				],
				"script": false
			},
			"ci:build": {
				"dependsOn": [
					"^ci:build",
					"ci:build:docs",
					"generate:packagesMd"
				],
				"script": false
			},
			"ci:build:docs": {
				"dependsOn": [
					"^ci:build:docs",
					"build:gendocs:client",
					"build:readme"
				],
				"script": false
			},
			"clean": {
				"dependsOn": [
					"^clean",
					"clean:root",
					"clean:docs",
					"clean:nyc"
				],
				"script": false
			},
			"clean:docs": {
				"before": [
					"*"
				]
			},
			"clean:nyc": {
				"before": [
					"*"
				]
			},
			"format": {
				"dependsOn": [
					"format:repo"
				],
				"script": false
			},
			"generate:packageList": {
				"dependsOn": [
					"generate:packageList:internal-build",
					"generate:packageList:internal-dev",
					"generate:packageList:internal-test",
					"generate:packageList:public"
				],
				"script": false
			},
			"lint": {
				"dependsOn": [
					"checks"
				],
				"script": false
			},
			"lint:fix": {
				"dependsOn": [
					"checks:fix"
				],
				"script": false
			}
		}
	},
	"pnpm": {
		"comments": [
			"node types < 18 are bumped to use the latest 18.x types. Though we don't support 18, old deps that still depend on old type versions will be guaranteed to be working with the correct types for the node version they target.",
			"nodegit is replaced with an empty package here because it's currently only used by good-fences for features we do not need, and has issues building when changing node versions. See https://github.com/smikula/good-fences/issues/105 for details.",
			"codemirror and marked overrides are because simplemde use * versions, and the fully up to date versions of its deps do not work. packageExtensions was tried to fix this, but did not work.",
			"@fluentui/react-positioning's dependency on @floating-ui/dom causes a peer dependency violation, so overriding it forces a version that meets peer dependency requirements is installed.",
			"oclif includes some AWS-related features, but we don't use them, so we override those dependencies with empty packages. This helps reduce lockfile churn since the deps release very frequently.",
			"axios pre-1.0 needs an override to stay current on a version with no reported CVEs. Caret dependencies aren't enough on a pre-1.0 package."
		],
		"overrides": {
			"@types/node": "^18.19.0",
			"@types/glob": "^8.1.0",
			"good-fences>nodegit": "npm:empty-npm-package@1.0.0",
			"qs": "^6.11.0",
			"simplemde>codemirror": "^5.65.11",
			"simplemde>marked": "^4.3.0",
			"@fluentui/react-positioning>@floating-ui/dom": "~1.5.4",
			"oclif>@aws-sdk/client-cloudfront": "npm:empty-npm-package@1.0.0",
			"oclif>@aws-sdk/client-s3": "npm:empty-npm-package@1.0.0",
			"axios@<0.30.0": "^0.30.0"
		},
		"peerDependencyComments": [
			"The react-split-pane package used by devtools-view has a peer dependency on React 16, but it doesn't seem to be maintained and it works fine with React 18. TODO: AB#18876",
			"@types/node is ignored because it is usually not needed by packages, and if it is, then the package will hit a compilation failure.",
			"Peer dependencies on fluid-framework are never fulfilled since that's an in-repo dependency; we expect a customer using some packages to install it as a dependency.",
			"markdown-magic is provided by another dependency so is ignored here.",
			"oclif includes some AWS-related features, but we don't use them, so we ignore @aws-sdk peer dependencies."
		],
		"peerDependencyRules": {
			"allowedVersions": {
				"react": "18.3.1",
				"react-dom": "18.3.1"
			},
			"ignoreMissing": [
				"@types/node",
				"fluid-framework",
				"markdown-magic",
				"@aws-sdk/*"
			]
		},
		"patchedDependencies": {
			"@microsoft/api-extractor@7.52.11": "patches/@microsoft__api-extractor@7.52.11.patch"
		},
		"onlyBuiltDependencies": [
			"@azure/msal-node-extensions",
			"@azure/msal-node-runtime",
			"@biomejs/biome",
			"@parcel/watcher",
			"@vvago/vale",
			"classic-level",
			"core-js",
			"esbuild",
			"keytar",
			"msgpackr-extract",
			"nx",
			"puppeteer",
			"unrs-resolver"
		]
	}
}
