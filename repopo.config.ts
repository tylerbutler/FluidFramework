/*!
 * Copyright (c) Microsoft Corporation and contributors. All rights reserved.
 * Licensed under the MIT License.
 */

import {
	NoJsFileExtensions,
	PackageJsonRepoDirectoryProperty,
	PackageJsonProperties,
	PackageJsonSorted,
	SortTsconfigs,
	JsTsFileHeaders,
	type RepopoConfig,
	PackageScripts,
	DefaultPolicies,
	type RepoPolicy,
} from "repopo";
import { fluidRepopoPolicies } from "@fluid-tools/build-cli";

// import { EOL as newline } from "node:os";
// const headerText = "HEADER";
// const autoGenText = `${newline}THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY`;

const policies: RepoPolicy<any>[] = [
	NoJsFileExtensions,
	// PackageJsonRepoDirectoryProperty,
	// PackageJsonProperties,
	// // PackageJsonSorted,
	// SortTsconfigs,
	// JsTsFileHeaders,
	// // PackageScripts,
	...fluidRepopoPolicies,
].filter((p) => !["no-js-file-extensions", "npm-package-json-prettier"].includes(p.name));

const config: RepopoConfig = {
	policies,
	// Entries here are COMPLETELY ignored by the policy checker. Instead of adding entries here, consider adding
	// entries to the handlerExclusions list below to ignore a particular.
	excludeFiles: [
		// The paths below are for fluidframework.com layouts and code and are not subject to policy.
		"docs/layouts/",
		"docs/themes/thxvscode/assets/",
		"docs/themes/thxvscode/layouts/",
		"docs/themes/thxvscode/static/assets/",

		// This file is a test file.
		"tools/markdown-magic/test/package.json",

		// Not a real package
		"docs/api/",

		// Source to output package.json files - not real packages
		// These should only be files that are not in an pnpm workspace.
		"common/build/build-common/src/cjs/package.json",
		"common/build/build-common/src/esm/package.json",
		"packages/common/core-interfaces/src/cjs/package.json",
		"packages/framework/presence/src/cjs/package.json",
	],
	excludePoliciesForFiles: {
		NoJsFileExtensions: [
			// PropertyDDS uses .js files which should be renamed eventually.
			"experimental/PropertyDDS/.*",
			"build-tools/packages/build-cli/bin/dev.js",
			"build-tools/packages/build-cli/bin/run.js",
			"build-tools/packages/build-cli/test/helpers/init.js",
			"build-tools/packages/version-tools/bin/dev.js",
			"build-tools/packages/version-tools/bin/run.js",
			"common/build/build-common/gen_version.js",
			"common/build/eslint-config-fluid/.*",
			"common/lib/common-utils/jest-puppeteer.config.js",
			"common/lib/common-utils/jest.config.js",
			"common/build/eslint-plugin-fluid/.*",
			"docs/api-markdown-documenter/.*",
			"docs/api/fallback/index.js",
			"docs/build-redirects.js",
			"docs/download-apis.js",
			"docs/local-api-rollup.js",
			"docs/static/js/add-code-copy-button.js",
			"examples/data-objects/monaco/loaders/blobUrl.js",
			"examples/data-objects/monaco/loaders/compile.js",
			"examples/service-clients/odsp-client/shared-tree-demo/tailwind.config.js",
			"packages/test/mocha-test-setup/mocharc-common.js",
			"packages/test/test-service-load/scripts/usePrereleaseDeps.js",
			"packages/tools/devtools/devtools-browser-extension/test-setup.js",
			"tools/changelog-generator-wrapper/src/getDependencyReleaseLine.js",
			"tools/changelog-generator-wrapper/src/getReleaseLine.js",
			"tools/changelog-generator-wrapper/src/index.js",
			"tools/getkeys/index.js",
		],
		"fluid-build-tasks-eslint": [
			// eslint doesn't really depend on build. Doing so just slows down a package build.
			"^packages/test/snapshots/package.json",
			"^packages/test/test-utils/package.json",
			// TODO: AB#7630 uses lint only ts projects for coverage which don't have representative tsc scripts
			"^packages/tools/fluid-runner/package.json",
		],
		"html-copyright-file-header": [
			// Tests generate HTML "snapshot" artifacts
			"tools/api-markdown-documenter/src/test/snapshots/.*",
		],
		"js-ts-copyright-file-header": [
			// These files all require a node shebang at the top of the file.
			"azure/packages/azure-local-service/src/index.ts",
			"experimental/PropertyDDS/packages/property-query/test/get_config.js",
			"server/routerlicious/packages/tinylicious/src/index.ts",

			// Type test files can be excluded since they're generated and known to have the correct header.
			// This can be removed once the whole repo uses build-tools v0.35.0+.
			/.*\/validate.*\.generated\.ts/,
		],
		"npm-package-json-scripts-args": [
			// server/routerlicious and server/routerlicious/packages/routerlicious use
			// linux only scripts that would require extra logic to validate properly.
			// Ideally no packages would use OS specific scripts.
			"^server/routerlicious/package.json",
			"^server/routerlicious/packages/routerlicious/package.json",
		],
		"npm-package-json-script-clean": [
			// eslint-config-fluid's build step generate printed configs that are checked in. No need to clean
			"common/build/eslint-config-fluid/package.json",
			// markdown-magic's build step update the README.md file that are checked in. No need to clean.
			"tools/markdown-magic/package.json",
		],
		"npm-package-json-script-mocha-config": [
			// these don't use mocha config for reporters yet.
			"^server/",
			"^build-tools/",
			"^common/lib/common-utils/package.json",
		],
		"npm-package-json-test-scripts": [
			"common/build/eslint-config-fluid/package.json",
			"packages/test/mocha-test-setup/package.json",
			"examples/apps/attributable-map/package.json",
		],
		"npm-package-json-test-scripts-split": [
			"server/",
			"tools/",
			"package.json",
			"packages/test/test-service-load/package.json",
			"packages/tools/devtools/devtools-browser-extension/package.json",
			"packages/tools/devtools/devtools-view/package.json",
		],
		"npm-package-exports-apis-linted": [
			// Rollout suppressions - enable only after tools are updated to support policy
			// as new build-tools will have the concurrently fluid-build support it uses.
			"^common/",

			// Packages that violate the API linting rules
			// ae-missing-release-tags, ae-incompatible-release-tags
			"^examples/data-objects/table-document/",

			// Packages with APIs that don't need strict API linting
			"^build-tools/",
			"^common/build/",
			"^experimental/PropertyDDS/",
			"^tools/api-markdown-documenter/",
		],
		// This handler will be rolled out slowly, so excluding most packages here while we roll it out.
		"npm-package-exports-field": [
			// We deliberately improperly import from deep in the package tree while we migrate everything into other
			// packages. This is temporary and can be fixed once the build-tools/build-cli pigration is complete.
			"^azure/",
			"^build-tools/packages/build-tools/package.json",
			"^build-tools/packages/build-infrastructure/package.json",
			"^common/",
			"^examples/",
			"^experimental/",
			"^packages/",
			"^server/",
			"^tools/",
		],
		"npm-package-json-clean-script": [
			"server/gitrest/package.json",
			"server/historian/package.json",
			// getKeys has a fake tsconfig.json to make ./eslintrc.cjs work, but we don't need clean script
			"tools/getkeys/package.json",
			// this package has a irregular build pattern, so our clean script rule doesn't apply.
			"tools/markdown-magic/package.json",
			// Docs directory breaks cleaning down into multiple scripts.
			"docs/package.json",
		],
		"npm-strange-package-name": [
			"server/gitrest/package.json",
			"server/historian/package.json",
			"package.json",
		],
		"npm-package-readmes": [
			"server/gitrest/package.json",
			"server/historian/package.json",
			"package.json",
		],
		"npm-package-folder-name": [
			"server/gitrest/package.json",
			"server/historian/package.json",
			"package.json",
		],
		"npm-package-json-script-dep": [],
		"npm-package-license": [
			// test packages
			"^build-tools/packages/build-infrastructure/src/test/data/testRepo/",
		],
		"npm-private-packages": [
			// test packages
			"^build-tools/packages/build-infrastructure/src/test/data/testRepo/",
		],
		"pnpm-npm-package-json-preinstall": [
			// test packages
			"^build-tools/packages/build-infrastructure/src/test/data/testRepo/",
		],
	},
	perPolicyConfig: {
		PackageJsonProperties: {
			verbatim: {
				license: "MIT",
				author: "Microsoft and contributors",
				homepage: "https://fluidframework.com",
				repository: {
					type: "git",
					url: "git+https://github.com/microsoft/FluidFramework.git",
				},
			},
		},
	},
};

export default config;
