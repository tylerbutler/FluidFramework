# BUILD.bazel for @fluidframework/container-loader
# Loader layer package - core container loading and lifecycle

load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@aspect_rules_js//js:defs.bzl", "js_library")
load("@aspect_rules_js//npm:defs.bzl", "npm_package")
load("@npm//:defs.bzl", "npm_link_all_packages")

npm_link_all_packages(name = "node_modules")

package(default_visibility = ["//visibility:public"])

# ESM compilation
ts_project(
    name = "container_loader_esm",
    srcs = glob(
        ["src/**/*.ts"],
        exclude = ["src/test/**/*"],
    ) + ["package.json"],
    composite = True,
    declaration = True,
    declaration_map = True,
    incremental = True,
    out_dir = "lib",
    root_dir = "src",
    source_map = True,
    ts_build_info_file = "lib/tsconfig.esm.tsbuildinfo",
    tsconfig = ":tsconfig.bazel.json",
    deps = [
        ":node_modules/@fluid-internal/client-utils",
        ":node_modules/@fluidframework/container-definitions",
        ":node_modules/@fluidframework/core-interfaces",
        ":node_modules/@fluidframework/core-utils",
        ":node_modules/@fluidframework/driver-definitions",
        ":node_modules/@fluidframework/driver-utils",
        ":node_modules/@fluidframework/telemetry-utils",
        ":node_modules/@types/debug",
        ":node_modules/@types/double-ended-queue",
        ":node_modules/@types/events_pkg",
        ":node_modules/@types/ungap__structured-clone",
        ":node_modules/@ungap/structured-clone",
        ":node_modules/debug",
        ":node_modules/double-ended-queue",
        ":node_modules/events_pkg",
        ":node_modules/uuid",
        ":node_modules/@types/node",
        "//packages/common/client-utils:lib",
        "//packages/common/container-definitions:lib",
        "//packages/common/core-interfaces:lib",
        "//packages/common/core-utils:lib",
        "//packages/common/driver-definitions:lib",
        "//packages/loader/driver-utils:lib",
        "//packages/utils/telemetry-utils:lib",
    ],
)

# CJS compilation
ts_project(
    name = "container_loader_cjs",
    srcs = glob(
        ["src/**/*.ts"],
        exclude = ["src/test/**/*"],
    ) + ["package.json"],
    composite = True,
    declaration = True,
    declaration_map = True,
    incremental = True,
    out_dir = "dist",
    root_dir = "src",
    source_map = True,
    ts_build_info_file = "dist/tsconfig.cjs.tsbuildinfo",
    tsconfig = ":tsconfig.cjs.bazel.json",
    transpiler = "tsc",
    deps = [
        ":node_modules/@fluid-internal/client-utils",
        ":node_modules/@fluidframework/container-definitions",
        ":node_modules/@fluidframework/core-interfaces",
        ":node_modules/@fluidframework/core-utils",
        ":node_modules/@fluidframework/driver-definitions",
        ":node_modules/@fluidframework/driver-utils",
        ":node_modules/@fluidframework/telemetry-utils",
        ":node_modules/@types/debug",
        ":node_modules/@types/double-ended-queue",
        ":node_modules/@types/events_pkg",
        ":node_modules/@types/ungap__structured-clone",
        ":node_modules/@ungap/structured-clone",
        ":node_modules/debug",
        ":node_modules/double-ended-queue",
        ":node_modules/events_pkg",
        ":node_modules/uuid",
        ":node_modules/@types/node",
        "//packages/common/client-utils:lib",
        "//packages/common/container-definitions:lib",
        "//packages/common/core-interfaces:lib",
        "//packages/common/core-utils:lib",
        "//packages/common/driver-definitions:lib",
        "//packages/loader/driver-utils:lib",
        "//packages/utils/telemetry-utils:lib",
    ],
)

# Package for TypeScript subpath exports
js_library(
    name = "lib",
    srcs = [
        ":container_loader_cjs",
        ":container_loader_esm",
        "package.json",
    ],
)

npm_package(
    name = "pkg",
    srcs = [":lib"],
    package = "@fluidframework/container-loader",
)

# Backward compatibility target
filegroup(
    name = "container_loader",
    srcs = [
        ":container_loader_cjs",
        ":container_loader_esm",
    ],
)
