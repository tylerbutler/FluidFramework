# BUILD.bazel for @fluidframework/driver-web-cache
# Retrofitted for npm_package approach (Session 2.15)

load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@aspect_rules_js//js:defs.bzl", "js_library")
load("@aspect_rules_js//npm:defs.bzl", "npm_package")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@npm//:jest/package_json.bzl", jest_bin = "bin")

package(default_visibility = ["//visibility:public"])

# Link npm packages for this workspace package
npm_link_all_packages(name = "node_modules")

ts_project(
    name = "driver_web_cache_esm",
    srcs = glob(
        ["src/**/*.ts"],
        exclude = ["src/test/**"],
    ),
    declaration = True,
    declaration_map = True,
    source_map = True,
    composite = True,
    resolve_json_module = True,
    out_dir = "lib",
    root_dir = "src",
    tsconfig = ":tsconfig.bazel.json",
    deps = [
        ":node_modules/idb",
        "//packages/common/core-interfaces:core_interfaces_esm",
        "//packages/common/core-utils:core_utils_esm",
        "//packages/common/driver-definitions:driver_definitions_esm",
        "//packages/loader/driver-utils:driver_utils_esm",
        "//packages/utils/telemetry-utils:telemetry_utils_esm",
    ],
)

# CommonJS compilation
ts_project(
    name = "driver_web_cache_cjs",
    srcs = glob(
        ["src/**/*.ts"],
        exclude = ["src/test/**"],
    ),
    declaration = True,
    declaration_map = True,
    source_map = True,
    composite = True,
    resolve_json_module = True,
    out_dir = "dist",
    root_dir = "src",
    tsconfig = ":tsconfig.cjs.bazel.json",
    deps = [
        ":node_modules/idb",
        "//packages/common/core-interfaces:core_interfaces_cjs",
        "//packages/common/core-utils:core_utils_cjs",
        "//packages/common/driver-definitions:driver_definitions_cjs",
        "//packages/loader/driver-utils:driver_utils_cjs",
        "//packages/utils/telemetry-utils:telemetry_utils_cjs",
    ],
)

# Default target builds both ESM and CJS

# js_library wrapping compiled outputs
# Provides JsInfo for npm_package and includes package.json with exports field
js_library(
    name = "lib",
    srcs = [
        ":driver_web_cache_esm",
        ":driver_web_cache_cjs",
        "package.json",
    ],
)

# npm_package makes this linkable via npm_link_all_packages
# This enables TypeScript to resolve subpath exports (/internal, /legacy, etc.)
npm_package(
    name = "pkg",
    srcs = [":lib"],
    visibility = ["//visibility:public"],
)

# Legacy filegroup for backward compatibility
filegroup(
    name = "driver_web_cache",
    srcs = [
        ":driver_web_cache_esm",
        ":driver_web_cache_cjs",
    ],
)

# ============================================================================
# Test Integration (Session 4.3)
# ============================================================================
# Jest test compilation with proper @types resolution

# Test compilation
ts_project(
    name = "driver_web_cache_test",
    srcs = glob(
        ["src/**/*.test.ts", "src/**/*.spec.ts"],
    ) + glob(
        ["src/**/*.ts"],
        exclude = [
            "src/**/*.test.ts",
            "src/**/*.spec.ts",
        ],
    ),
    declaration = False,
    source_map = True,
    incremental = True,
    out_dir = "lib-test",
    root_dir = "src",
    tsconfig = "src/test/tsconfig.bazel.json",
    transpiler = "tsc",
    deps = [
		"//packages/common/core-interfaces:core_interfaces_esm",
		"//packages/common/core-utils:core_utils_esm",
		"//packages/common/driver-definitions:driver_definitions_esm",
		"//packages/loader/driver-utils:driver_utils_esm",
		"//packages/utils/telemetry-utils:telemetry_utils_esm",
		":node_modules/@fluidframework/core-utils",
		":node_modules/@fluidframework/driver-definitions",
		":node_modules/@fluidframework/driver-utils",
		":node_modules/@fluidframework/telemetry-utils",
		":node_modules/@types/jest",
		":node_modules/@types/node",
		":node_modules/idb",
	],
)

# Jest test runner
jest_bin.jest_test(
    name = "test",
    args = [
        "lib-test/**/*.test.js",
        "lib-test/**/*.spec.js",
    ],
    data = [
        ":driver_web_cache_test",
        ":driver_web_cache_esm",  # Runtime needs the compiled package
    ],
    tags = ["manual"],  # Mark as manual until validated
)
