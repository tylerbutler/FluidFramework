load("@aspect_rules_js//js:defs.bzl", "js_library")
load("@aspect_rules_js//npm:defs.bzl", "npm_package")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@npm//:defs.bzl", "npm_link_all_packages")

npm_link_all_packages(name = "node_modules")

# ESM build
ts_project(
    name = "undo_redo_esm",
    srcs = glob(
        ["src/**/*.ts"],
        exclude = ["src/test/**"],
    ) + ["package.json"],
    tsconfig = "tsconfig.bazel.json",
    composite = True,
    declaration = True,
    declaration_map = True,
    incremental = True,
    source_map = True,
    transpiler = "tsc",
    out_dir = "lib",
    root_dir = "src",
    deps = [
        ":node_modules/@fluid-internal/client-utils",
        ":node_modules/@fluidframework/map",
        ":node_modules/@fluidframework/matrix",
        ":node_modules/@fluidframework/merge-tree",
        ":node_modules/@fluidframework/sequence",
    ],
)

# CJS build
ts_project(
    name = "undo_redo_cjs",
    srcs = glob(
        ["src/**/*.ts"],
        exclude = ["src/test/**"],
    ) + ["package.json"],
    tsconfig = "tsconfig.cjs.bazel.json",
    composite = True,
    declaration = True,
    declaration_map = True,
    incremental = True,
    source_map = True,
    transpiler = "tsc",
    out_dir = "dist",
    root_dir = "src",
    deps = [
        ":node_modules/@fluid-internal/client-utils",
        ":node_modules/@fluidframework/map",
        ":node_modules/@fluidframework/matrix",
        ":node_modules/@fluidframework/merge-tree",
        ":node_modules/@fluidframework/sequence",
    ],
)

# Copy CJS package.json marker
genrule(
    name = "copy_cjs_package_json",
    srcs = ["//common/build/build-common/src/cjs:package.json"],
    outs = ["dist/package.json"],
    cmd = "cp $< $@",
)

# js_library wrapper for npm_package
js_library(
    name = "lib",
    srcs = [
        ":undo_redo_cjs",
        ":undo_redo_esm",
        ":copy_cjs_package_json",
        "package.json",
    ],
)

# npm_package for npm_link_all_packages
npm_package(
    name = "pkg",
    srcs = [":lib"],
    package = "@fluidframework/undo-redo",
    visibility = ["//visibility:public"],
)

# Backward compatibility filegroup
filegroup(
    name = "undo_redo",
    srcs = [":pkg"],
    visibility = ["//visibility:public"],
)
