load("@aspect_rules_js//js:defs.bzl", "js_library")
load("@aspect_rules_js//npm:defs.bzl", "npm_package")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@npm//:mocha/package_json.bzl", mocha_bin = "bin")

npm_link_all_packages(name = "node_modules")

# ESM build
ts_project(
    name = "react_esm",
    srcs = glob(
        ["src/**/*.ts", "src/**/*.tsx"],
        exclude = ["src/test/**"],
    ) + ["package.json"],
    tsconfig = "tsconfig.bazel.json",
    composite = True,
    declaration = True,
    declaration_map = True,
    incremental = True,
    source_map = True,
    transpiler = "tsc",
    ts_build_info_file = "lib/.tsbuildinfo",
    out_dir = "lib",
    root_dir = "src",
    deps = [
        ":node_modules/@fluidframework/aqueduct",
        ":node_modules/@fluidframework/core-interfaces",
        ":node_modules/@fluidframework/datastore-definitions",
        ":node_modules/@fluidframework/fluid-static",
        ":node_modules/@fluidframework/runtime-definitions",
        ":node_modules/@fluidframework/shared-object-base",
        ":node_modules/@fluidframework/tree",
        ":node_modules/react",
    ],
)

# CJS build
ts_project(
    name = "react_cjs",
    srcs = glob(
        ["src/**/*.ts", "src/**/*.tsx"],
        exclude = ["src/test/**"],
    ) + ["package.json"],
    tsconfig = "tsconfig.cjs.bazel.json",
    composite = True,
    declaration = True,
    declaration_map = True,
    incremental = True,
    source_map = True,
    transpiler = "tsc",
    ts_build_info_file = "dist/.tsbuildinfo",
    out_dir = "dist",
    root_dir = "src",
    deps = [
        ":node_modules/@fluidframework/aqueduct",
        ":node_modules/@fluidframework/core-interfaces",
        ":node_modules/@fluidframework/datastore-definitions",
        ":node_modules/@fluidframework/fluid-static",
        ":node_modules/@fluidframework/runtime-definitions",
        ":node_modules/@fluidframework/shared-object-base",
        ":node_modules/@fluidframework/tree",
        ":node_modules/react",
    ],
)

# Copy CJS package.json marker
genrule(
    name = "copy_cjs_package_json",
    srcs = ["//common/build/build-common/src/cjs:package.json"],
    outs = ["dist/package.json"],
    cmd = "cp $< $@",
)

# js_library wrapper for npm_package
js_library(
    name = "lib",
    srcs = [
        ":react_cjs",
        ":react_esm",
        ":copy_cjs_package_json",
        "package.json",
    ],
)

# npm_package for npm_link_all_packages
npm_package(
    name = "pkg",
    srcs = [":lib"],
    package = "@fluidframework/react",
    visibility = ["//visibility:public"],
)

# Backward compatibility filegroup
filegroup(
    name = "react",
    srcs = [":pkg"],
    visibility = ["//visibility:public"],
)

# ============================================================================
# Test Integration (Session 4.3)
# ============================================================================
# Mocha test compilation with proper @types resolution

# Test compilation (ESM)
ts_project(
    name = "react_test",
    srcs = glob(
        ["src/test/**/*.ts"],
        exclude = [
            "src/test/types/**",  # Type validation tests
            "src/test/**/*.d.ts",  # Type declaration files
        ],
    ) + glob(
        ["src/**/*.ts"],
        exclude = [
            "src/test/**",  # Already included above
            "src/cjs/**",  # CJS-specific files
        ],
    ),
    declaration = False,
    source_map = True,
    incremental = True,
    out_dir = "lib-test",
    root_dir = "src",
    tsconfig = "src/test/tsconfig.bazel.json",
    transpiler = "tsc",
    deps = [
        ":node_modules/@types/mocha",
        ":node_modules/@types/node",
        ":node_modules/@fluidframework/aqueduct",
        ":node_modules/@fluidframework/core-interfaces",
        ":node_modules/@fluidframework/datastore-definitions",
        ":node_modules/@fluidframework/fluid-static",
        ":node_modules/@fluidframework/runtime-definitions",
        ":node_modules/@fluidframework/shared-object-base",
        ":node_modules/@fluidframework/tree",
        ":node_modules/react",
    ],
)

# Mocha test runner
mocha_bin.mocha_test(
    name = "test",
    args = [
        "lib-test/test/**/*.spec.js",
        "--exit",
    ],
    data = [
        ":react_test",
        ":react_esm",  # Runtime needs the compiled package
    ],
    tags = ["manual"],  # Mark as manual until validated
)
